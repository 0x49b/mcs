# Generated by Django 4.0 on 2021-12-27 15:05

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ServerBin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('type', models.IntegerField(choices=[(0, 'BungeeCord'), (1, 'Spigot'), (2, 'Bukkit'), (3, 'PaperMC')], default=0)),
                ('download_path', models.URLField()),
            ],
            options={
                'verbose_name': 'Server Binary',
                'verbose_name_plural': 'Server Binaries',
            },
        ),
        migrations.CreateModel(
            name='ServerProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_name', models.CharField(max_length=500)),
                ('server_port', models.IntegerField(default=25565)),
                ('query_port', models.IntegerField(default=25580)),
                ('rcon_port', models.IntegerField(default=25570)),
                ('rcon_password', models.CharField(max_length=200)),
                ('server_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('enable_jmx_monitoring', models.BooleanField(default=False)),
                ('enable_command_block', models.BooleanField(default=False)),
                ('gamemode', models.CharField(choices=[('survival', 'Survival'), ('creative', 'Creative'), ('adventure', 'Adventure'), ('spectator', 'Spectator')], default='survival', max_length=10)),
                ('enable_query', models.BooleanField(default=True)),
                ('motd', models.CharField(default='A Minecraft Server', max_length=500)),
                ('pvp', models.BooleanField(default=True)),
                ('difficulty', models.CharField(choices=[('peaceful', 'Peaceful'), ('easy', 'Easy'), ('normal', 'Normal'), ('hard', 'Hard')], default='easy', max_length=8)),
                ('network_compression_threshold', models.IntegerField(default=256)),
                ('max_tick_time', models.IntegerField(default=60000)),
                ('require_resource_pack', models.BooleanField(default=False)),
                ('use_native_transport', models.BooleanField(default=True)),
                ('max_players', models.IntegerField(default=20)),
                ('enable_status', models.BooleanField(default=True)),
                ('online_mode', models.BooleanField(default=True)),
                ('allow_flight', models.BooleanField(default=False)),
                ('broadcast_rcon_to_ops', models.BooleanField(default=True)),
                ('view_distance', models.IntegerField(default=10)),
                ('resource_pack_prompt', models.CharField(blank=True, max_length=500, null=True)),
                ('allow_nether', models.BooleanField(default=True)),
                ('enable_rcon', models.BooleanField(default=True)),
                ('sync_chunk_writes', models.BooleanField(default=True)),
                ('op_permission_level', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('prevent_proxy_connections', models.BooleanField(default=False)),
                ('hide_online_players', models.BooleanField(default=False)),
                ('resource_pack', models.CharField(blank=True, max_length=500, null=True)),
                ('entity_broadcast_range_percentage', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(1000)])),
                ('simulation_distance', models.IntegerField(default=10)),
                ('player_idle_timeout', models.IntegerField(default=0)),
                ('debug', models.BooleanField(default=False)),
                ('force_gamemode', models.BooleanField(default=False)),
                ('rate_limit', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('hardcore', models.BooleanField(default=False)),
                ('white_list', models.BooleanField(default=False)),
                ('broadcast_console_to_ops', models.BooleanField(default=True)),
                ('spawn_npcs', models.BooleanField(default=True)),
                ('spawn_animals', models.BooleanField(default=True)),
                ('function_permission_level', models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('text_filtering_config', models.CharField(blank=True, max_length=500, null=True)),
                ('spawn_monsters', models.BooleanField(default=True)),
                ('enforce_whitelist', models.BooleanField(default=False)),
                ('resource_pack_sha1', models.CharField(blank=True, max_length=500, null=True)),
                ('spawn_protection', models.IntegerField(default=16, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
                ('max_world_size', models.IntegerField(default=29999984, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(29999984)])),
            ],
            options={
                'verbose_name': 'Server Properties',
                'verbose_name_plural': 'Servers Properties',
            },
        ),
    ]
